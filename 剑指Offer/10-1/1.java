/**
 * 思路：动态规划思想。即：将求过的数列。存储到数组当中。以空间来换取时间。
 * 时间复杂度：O(n)
 * 空间复杂度：O(n)
 */
class Solution {
    public int fib(int n) {
        // 如果n==0，直接返回。
        if (n == 0) {
            return 0;
        }
        // 存储数列的数组
        int[] f = new int[n + 1];
        // 对第一项和第二项初始化
        f[0] = 0;
        f[1] = 1;
        // 计算数列
        for (int i = 2; i <= n; i++) {
            f[i] = f[i - 1] + f[i - 2];
            // 题目中要求对数字进行取模
            f[i] %= 1000000007;
        }

        return f[n];
    }
}